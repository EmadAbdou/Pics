{"version":3,"sources":["api/unsplash.js","components/SearchBar.js","components/ImageCard.js","components/ImageList.js","components/App.js","index.js"],"names":["axios","create","baseURL","headers","Authorization","SearchBar","state","term","onFormSubmit","e","preventDefault","_this","props","onSubmit","_this2","this","react_default","a","createElement","className","type","onChange","setState","target","value","React","Component","ImageCard","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","createRef","addEventListener","_this$props$image","image","description","urls","style","gridRowEnd","concat","src","regular","alt","ref","ImageList","images","map","components_ImageCard","key","id","App","onSearchSubmit","_callee","response","regenerator_default","wrap","_context","prev","next","unsplash","get","params","query","sent","data","results","stop","marginTop","SearchBar_SearchBar","src_components_ImageList","ReactDOM","render","components_App","document","getElementById"],"mappings":"iQAEeA,WAAMC,OAAO,CACxBC,QAAS,2BACTC,QAAS,CACLC,cAAe,gFCHFC,6MAIjBC,MAAQ,CAAEC,KAAM,MAChBC,aAAe,SAACC,GACZA,EAAEC,iBACFC,EAAKC,MAAMC,SAASF,EAAKL,MAAMC,+EAE1B,IAAAO,EAAAC,KACL,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAY,cACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAY,UAAUN,SAAUE,KAAKP,cACvCQ,EAAAC,EAAAC,cAAA,OAAKC,UAAY,SACbH,EAAAC,EAAAC,cAAA,+BAGAF,EAAAC,EAAAC,cAAA,SAAOE,KAAO,OAAOC,SAAY,SAACZ,GAAD,OAAOK,EAAKQ,SAAS,CAACf,KAAME,EAAEc,OAAOC,SAASA,MAAOT,KAAKT,MAAMC,iBAjBlFkB,IAAMC,WC8B9BC,qBA7BX,SAAAA,EAAYf,GAAO,IAAAD,EAAA,OAAAiB,OAAAC,EAAA,EAAAD,CAAAb,KAAAY,IACfhB,EAAAiB,OAAAE,EAAA,EAAAF,CAAAb,KAAAa,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAjB,KAAMH,KAQVqB,SAAW,WAEP,IAAMC,EAAUvB,EAAKwB,SAASC,QAAQC,aAChCC,EAAQC,KAAKC,KAAKN,EAAO,IAC/BvB,EAAKW,SAAS,CAAEgB,WAXhB3B,EAAKL,MAAQ,CAAEgC,MAAO,KACtB3B,EAAKwB,SAAWV,IAAMgB,YAHP9B,mFAOfI,KAAKoB,SAASC,QAAQM,iBAAiB,OAAQ3B,KAAKkB,2CAQ/C,IAAAU,EACuB5B,KAAKH,MAAMgC,MAAhCC,EADFF,EACEE,YAAaC,EADfH,EACeG,KACpB,OACI9B,EAAAC,EAAAC,cAAA,OAAK6B,MAAO,CAAEC,WAAU,QAAAC,OAAUlC,KAAKT,MAAMgC,SACzCtB,EAAAC,EAAAC,cAAA,OACIgC,IAAQJ,EAAKK,QACbC,IAAQP,EACRQ,IAAQtC,KAAKoB,mBAvBTV,IAAMC,YCkCf4B,EAhCG,SAAC1C,GA0Bf,IAAM2C,EAAS3C,EAAM2C,OAAOC,IAAK,SAACZ,GAC9B,OAAO5B,EAAAC,EAAAC,cAACuC,EAAD,CAAWC,IAAMd,EAAMe,GAAKf,MAAQA,MAE/C,OAAO5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,IAA8BoC,EAA9B,MCKIK,6MApBXtD,MAAQ,CAAEiD,OAAQ,MAElBM,qDAAiB,SAAAC,EAAOvD,GAAP,IAAAwD,EAAA,OAAAC,EAAA/C,EAAAgD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACUC,EAASC,IAAI,iBAAkB,CAClDC,OAAQ,CAAEC,MAAOjE,KAFR,OACPwD,EADOG,EAAAO,KAKb9D,EAAKW,SAAS,CAAEiC,OAAQQ,EAASW,KAAKC,UALzB,wBAAAT,EAAAU,SAAAd,EAAA/C,uIAQb,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAe4B,MAAO,CAAC8B,UAAW,SAC7C7D,EAAAC,EAAAC,cAAC4D,EAAD,CAAWjE,SAAUE,KAAK8C,iBAE1B7C,EAAAC,EAAAC,cAAC6D,EAAD,CAAWxB,OAAUxC,KAAKT,MAAMiD,iBA3B9B9B,IAAMC,WCDxBsD,IAASC,OAAOjE,EAAAC,EAAAC,cAACgE,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.2e3335e2.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://api.unsplash.com',\r\n    headers: {\r\n        Authorization: 'Client-ID e7c1f3e22c59436ef4689df33a587ffe1b74c2e1b2f4d29d654da0beada6b86a'\r\n    }\r\n});","import React from 'react';\r\n\r\nexport default class SearchBar extends React.Component {\r\n    // onInputChange(event) {\r\n    //     console.log(event.target.value);\r\n    // }\r\n    state = { term: ''};\r\n    onFormSubmit = (e) =>{\r\n        e.preventDefault();\r\n        this.props.onSubmit(this.state.term);\r\n    }\r\n    render() {\r\n        return ( \r\n            <div className = \"ui segment\" >\r\n                <form className = \"ui form\" onSubmit={this.onFormSubmit}>\r\n                    <div className = \"field\" >\r\n                        <label > Image Search </label>\r\n                        {/* <input type = \"text\" onChange = {this.onInputChange}/>  */}\r\n                        {/* <input type = \"text\" onChange = {(e) => this.setState({term: e.target.value.toUpperCase()})} value={this.state.term} />  */}\r\n                        <input type = \"text\" onChange = {(e) => this.setState({term: e.target.value})} value={this.state.term} /> \r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nclass ImageCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { spans: '0'};\r\n        this.imageRef = React.createRef();\r\n    }\r\n    componentDidMount(){\r\n        // console.log(this.imageRef);\r\n        this.imageRef.current.addEventListener('load', this.setSpans);\r\n    }\r\n    setSpans = () => {\r\n        // console.log(this.imageRef.current.clientHeight);\r\n        const height =  this.imageRef.current.clientHeight;\r\n        const spans = Math.ceil(height/10);\r\n        this.setState({ spans });\r\n    }\r\n    render() {\r\n        const {description, urls} = this.props.image;\r\n        return(\r\n            <div style={{ gridRowEnd: `span ${this.state.spans}`}}>\r\n                <img \r\n                    src = { urls.regular }\r\n                    alt = { description }\r\n                    ref = { this.imageRef }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ImageCard;","import './ImageList.css';\r\nimport React from 'react';\r\nimport ImageCard from './ImageCard';\r\n\r\nconst ImageList = (props) => {\r\n    // console.log(props);\r\n    // const images = props.images.map((image) => {\r\n    //     return <img src = {\r\n    //         image.urls.regular\r\n    //     }\r\n    //     alt = {\r\n    //         image.description\r\n    //     }\r\n    //     key = { image.id }\r\n    //     />;\r\n    // });\r\n\r\n    // Other type\r\n    // const images = props.images.map(({ description, id, urls }) => {\r\n    //     return <img src = {\r\n    //         urls.regular\r\n    //     }\r\n    //     alt = {\r\n    //         description\r\n    //     }\r\n    //     key = { id }\r\n    //     />;\r\n    // });\r\n\r\n    //use Image Card\r\n    const images = props.images.map( (image) => {\r\n        return <ImageCard key= {image.id}  image= {image} />\r\n    });\r\n    return <div className=\"image-list\"> {images} </div>;\r\n};\r\n\r\nexport default ImageList;","import React from 'react';\r\nimport unsplash from '../api/unsplash';\r\nimport SearchBar from './SearchBar';\r\nimport ImageList from './ImageList';\r\n\r\nclass App extends React.Component {\r\n    // Method to send request and recieve response data\r\n    // onSearchSubmit(term){\r\n    //     axios.get('https://api.unsplash.com/search/photos', {\r\n    //         params: { query: term },\r\n    //         headers: {\r\n    //             Authorization: 'Client-ID e7c1f3e22c59436ef4689df33a587ffe1b74c2e1b2f4d29d654da0beada6b86a'\r\n    //         }\r\n    //     }).then( (response) => {\r\n    //         console.log(response.data.results);\r\n    //     })\r\n    // }\r\n\r\n    state = { images: [] };\r\n    // Other method \" Best one \"\r\n    onSearchSubmit = async (term) => {\r\n        const response = await unsplash.get('/search/photos', {\r\n            params: { query: term },\r\n        });\r\n        // console.log(response.data.results);\r\n        this.setState({ images: response.data.results });\r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"ui container\" style={{marginTop: '10px'}}> \r\n                <SearchBar onSubmit={this.onSearchSubmit}></SearchBar>\r\n                {/* Found: { this.state.images.length } images */}\r\n                <ImageList images = {this.state.images}/>\r\n            </div> \r\n        );    \r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}